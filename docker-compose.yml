version: '3'
services:
  mongo:
    hostname: mongo
    image: mongo
    container_name: mongo
    ports:
      - "127.0.0.1:27017:27017"
    networks:
      - erxes-net
    healthcheck:
      test: test $$(echo "rs.initiate().ok || rs.status().ok" | mongo --quiet) -eq 1
      interval: 2s
      timeout: 2s
      retries: 200
    command: ["--replSet", "rs0", "--bind_ip_all"]
    volumes:
      - ./data/db:/data/db

  redis:
    image: 'redis'
    container_name: redis
    ports:
      - "127.0.0.1:6379:6379"
    networks:
      - erxes-net

  rabbitmq:
    image: rabbitmq:3.7.17-management
    container_name: rabbitmq
    restart: unless-stopped
    hostname: rabbitmq
    ports:
      - "127.0.0.1:15672:15672"
    networks:
      - erxes-net
    # RabbitMQ data will be saved into ./rabbitmq-data folder.
    volumes:
      - ./rabbitmq-data:/var/lib/rabbitmq

  elasticsearch:
    image: "docker.elastic.co/elasticsearch/elasticsearch:7.5.2"
    container_name: "elasticsearch"
    environment:
      - discovery.type=single-node
    ports:
      - "127.0.0.1:9200:9200"
    networks:
      - erxes-net
    volumes:
      - ./elasticsearchData:/usr/share/elasticsearch/data

  kibana:
    image: "docker.elastic.co/kibana/kibana:7.5.2"
    container_name: "kibana"
    ports:
      - "127.0.0.1:5601:5601"
    networks:
      - erxes-net

  erxes-api:
    container_name: "erxes-api"
    build:
      dockerfile: ./Dockerfile.dev
      context: ../erxes-api
    volumes:
      - /erxes-api/node_modules
      - /erxes-api/.git
      - ../erxes-api/:/erxes-api
    env_file:
      ../erxes-api/.env
    depends_on:
      - "mongo"
      - "redis"
      - "rabbitmq"
      - "elasticsearch"
    ports:
      - '3300:3300'
    networks:
      - erxes-net

  elksyncer:
    container_name: "elksyncer"
    build:
       dockerfile: ./Dockerfile
       context: ../erxes-api/elkSyncer
    env_file:
      ../erxes-api/elkSyncer/.env
    depends_on:
      - "mongo"
      - "elasticsearch"
    volumes:
      - ../erxes-api/elkSyncer:/elkSyncer
    tty: true
    command: ["bash"]
    networks:
      - erxes-net

  erxes-widgets:
    container_name: "erxes-widgets"
    build:
      dockerfile: ./Dockerfile.dev
      context: ../erxes/widgets
    volumes:
      - /erxes-widgets/node_modules
      - /erxes-widgets/.git
      - ../erxes/widgets/:/erxes-widgets
    env_file:
      ../erxes/widgets/.env
    ports:
      - '3200:3200'
    depends_on: 
      - erxes-api
    networks:
      - erxes-net

networks:
  erxes-net:
    driver: bridge