version: '3'
services:
  mongo:
    hostname: mongo
    image: mongo
    container_name: mongo
    ports:
      - "127.0.0.1:27017:27017"
    networks:
      - erxes-net
    healthcheck:
      test: test $$(echo "rs.initiate().ok || rs.status().ok" | mongo --quiet) -eq 1
      interval: 2s
      timeout: 2s
      retries: 200
    command: ["--replSet", "rs0", "--bind_ip_all"]
    volumes:
      - ./data/db:/data/db

  redis:
    image: 'redis'
    container_name: redis
    command: redis-server --appendonly yes --requirepass redis
    ports:
      - "127.0.0.1:6379:6379"
    volumes:
      - ./redis-data:/data
    networks:
      - erxes-net

  rabbitmq:
    image: rabbitmq:3.7.17-management
    container_name: rabbitmq
    restart: unless-stopped
    hostname: rabbitmq
    ports:
      - "127.0.0.1:15672:15672"
      - "127.0.0.1:5672:5672"
    networks:
      - erxes-net
    # RabbitMQ data will be saved into ./rabbitmq-data folder.
    volumes:
      - ./rabbitmq-data:/var/lib/rabbitmq

  elasticsearch:
    image: "docker.elastic.co/elasticsearch/elasticsearch:7.5.2"
    container_name: "elasticsearch"
    environment:
      - discovery.type=single-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 32768
        hard: 65536
    ports:
      - "127.0.0.1:9200:9200"
    networks:
      - erxes-net
    volumes:
      - ./elasticsearchData:/usr/share/elasticsearch/data

  kibana:
    image: "docker.elastic.co/kibana/kibana:7.5.2"
    container_name: "kibana"
    depends_on:
      - "elasticsearch"
    ports:
      - "127.0.0.1:5601:5601"
    networks:
      - erxes-net

  elksyncer:
    container_name: "elksyncer"
    build:
       dockerfile: ./Dockerfile
       context: ../erxes/erxes/elkSyncer
    env_file:
      ../erxes/erxes/elkSyncer/.env
    depends_on:
      - "mongo"
      - "elasticsearch"
    volumes:
      - ./mongoConnectorLog:/var/log/mongo-connector
    tty: true
    networks:
      - erxes-net

  # elksyncer:
  #   container_name: 'elksyncer'
  #   build:
  #     dockerfile: ./Dockerfile
  #     context: ../../erxes-saas/erxes/elkSyncer
  #   env_file:
  #     ../../erxes-saas/erxes/elkSyncer/.env
  #   depends_on:
  #     - 'mongo'
  #     - 'elasticsearch'
  #   networks:
  #     - erxes-net

  # erxes-api-check:
  #   image: registry.erxes.io/erxes-enterprise/erxes-api:golomt
  #   container_name: erxes-api
  #   restart: unless-stopped
  #   environment:
  #     PORT: "3300"
  #     NODE_ENV: production
  #     DEBUG: "erxes-api:*"
  #     MAIN_APP_DOMAIN: http://localhost:3000
  #     INTEGRATIONS_API_DOMAIN: http://localhost:3400
  #     LOGS_API_DOMAIN: http://localhost:3800
  #     MONGO_URL: mongodb://mongo/erxes
  #     ELASTICSEARCH_URL: http://elasticsearch:9200
  #     RABBITMQ_HOST: "amqp://rabbitmq"
  #     MESSAGE_BROKER_PREFIX: "1"
  #     JWT_TOKEN_SECRET: "token"
  #     DD_SERVICE: ""
  #     DD_HOST: ""
  #   ports:
  #     - "127.0.0.1:3300:3300"
  #   networks:
  #     - erxes-net

networks:
  erxes-net:
    driver: bridge
